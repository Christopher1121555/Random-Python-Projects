Thursday notes:


"""#x='wha'
y= x[::1]
z = x[0:7:2]
print(z)"""

"""#my_variable = "one, two"
my_variable = my_variable.replace('one', 'uno')
print (my_variable)"""

"""#y = 'parse!'
n = y.find('!')
print(n)"""

'''#user_tweet = input()

if user_tweet.find('LOL') == 5:
    print ('LOL menas laughing out loud.')
else:
    print('No abbreviation')'''
    
#x=15.5436
#print('{:.3f}'.format(x))

# .split(x)
#Months = 'January/February/March/April/May/June/July/August/September/October/November/December'
#list_months = Months.split('/')
#print (list_months)
#print (list_months[5])
'''#n = '1/2/3'
y = n.split('/')
print(y)

join = '$'
x = join.join(y)

print (x)


b = x.split('$')
for n in b:
    print (n)'''
    
car_year = int(input())

if car_year >= 1970:
    print('Probably has seat belts.')
    if car_year >= 1990:
        print('Probably has antilock brakes.')
        if car_year >=2000:
            print('Probably has airbags.')
else:
    print('Few safety features.')


-----------------------------------
DOING STYLES IN A DEF FUNCTION
-----------------------------------

def print_date(day, month, year, style=0):
    if style == 0:  # American
        print(month, '/', day, '/', year)
    elif style == 1:  # European
        print(day, '/', month, '/', year)
    else:
        print('Invalid Style')

print_date(30, 7, 2012, 0)
print_date(30, 7, 2012, 1)
print_date(30, 7, 2012)
        
------------------------------------
SLICING LISTS
------------------------------------        
x = [0, 1, 2, 3, 4]
print(x[0:3]) #slice notation. Cuts everything between desired #'s
              #final number is not included
        


EXAMPLE OF USING NEGATIVES:

election_years = [1992, 1996, 2000, 2004, 2008]
print(election_years[0:-1])  # Every year except the last
print(election_years[0:-3])  # Every year except the last three
print(election_years[-3:-1])  # The third and second to last years

--------------------------------------
USING FOR STATEMENTS
--------------------------------------
"""
num = [      
       [1, 4, 6],
       [4, 5, 6],
       [3, 5, 55]
] 
      
for row in num:
    for cell in row:
        print((cell), end=' ')
    print()   """ 



OUTPUT --> 

1 4 6
4 5 6
3 5 55

-----------------------------
CONVERTING STRINGS TO INTEGERS FROM LIST TO LIST
-----------------------------
user_input = input('Enter numbers: ')

tokens = user_input.split()
nums = []
for token in tokens:
    nums.append(int(token))

#print if needed
-----------------------------




LAB NOTES:

















        